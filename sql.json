{
	// Place your snippets for sql here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"select-from-source": {
		"prefix": "ssf",
		"body": "SELECT * FROM ${1:table};",
		"description": "select all columns from source (table, view etc.)"
	},
	"select-count": {
		"prefix": "scf",
		"body": "SELECT COUNT(*) FROM ${1:table};",
		"description": "select count (with NULLs) from source (table, view etc.)"
	},
	"select-top-100": {
		"prefix": "st100",
		"body": "SELECT TOP(100) * FROM ${1:table};",
		"description": "select top 100 rows"
	},
	"order-by": {
		"prefix": "ordby",
		"body": "ORDER BY ${1:column}",
		"description": "order by specific column"
	},
	"left-outer-join": {
		"prefix": "loj",
		"body": "LEFT OUTER JOIN ${1:table} $2 ON $2.${3:column} = $0",
		"description": "left outer join specific table by a given key"
	},
	"inner-join": {
		"prefix": "ij",
		"body": "INNER JOIN ${1:table} $2 ON $2.${3:column} = $0",
		"description": "inner join specific table by a given key"
	},
	"insert-into": {
		"prefix": "ii",
		"body": [
			"INSERT INTO ${1:table} (",
			"\t${2:columns}",
			")"
		],
	},
	"cursor-fast-forward": {
		"prefix": "curff",
		"body": [
			"DECLARE $1 CURSOR FORWARD_ONLY FAST_FORWARD READ_ONLY LOCAL FOR",
			"SELECT ${3:column(s)}",
			"FROM ${2:source}",
			"\r\nOPEN $1;",
			"FETCH NEXT FROM $1 INTO $4;",
			"WHILE @@FETCH_STATUS = 0",
			"BEGIN",
			"\t$0",
			"\tFETCH NEXT FROM $1 INTO $4;",
			"END;"
		]
	},
	"sobos-create-stored-procedure": {
		"prefix": "sobos-sp",
		"body": [
			"--------------------------------------------------------------------------------",
			"-- $1.$2",
			"--------------------------------------------------------------------------------",
			"IF NOT EXISTS(",
				"SELECT 1",
				"FROM INFORMATION_SCHEMA.ROUTINES",
				"WHERE ROUTINE_NAME = '$2'",
					"AND ROUTINE_TYPE = 'PROCEDURE')",
			"BEGIN",
				"PRINT 'Creating procedure $1.$2';",
				"EXEC ('CREATE PROCEDURE [$1].[$2] AS RAISERROR(''Not implemented yet.'', 16, 3);');",
			"END;",
			"",
			"PRINT 'Altering of procedure $1.$2';",
			"GO",
			"",
			"SET QUOTED_IDENTIFIER ON;",
			"GO",
			"",
			"SET ANSI_NULLS ON;",
			"GO",
			"",
			"--------------------------------------------------------------------------------",
			"-- $1.$2",
			"--------------------------------------------------------------------------------",
			"ALTER PROCEDURE [$1].[$2]",
				"${3}",
			"AS",
			"BEGIN",
				"SET ANSI_WARINING ON;",
				"SET NOCOUNT ON;",
				"",
				"${0}",
			"END;",
			"GO",
			""
		],
		"description": ""
	}
}